<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->
<configuration>
  <configSections>
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <sectionGroup name="system.serviceModel">
      <section name="domainServices" type="System.ServiceModel.DomainServices.Hosting.DomainServicesSection, System.ServiceModel.DomainServices.Hosting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" allowDefinition="MachineToApplication" requirePermission="false" />
    </sectionGroup>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
      <section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" />
      <section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" />
    </sectionGroup>
  </configSections>
  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <targets>
      <target name="f1" xsi:type="File" fileName="D:\Applications\log\tours-production\elastiCache.txt" />
      <target name="ds" xsi:type="OutputDebugString" />
    </targets>
    <rules>
      <logger name="*" levels="Error" writeTo="f1,ds" />
    </rules>
  </nlog>
  <connectionStrings>
    <add name="ResApplicationEntities" connectionString="metadata=res://*/_event.ResApplicationEntities.csdl|res://*/_event.ResApplicationEntities.ssdl|res://*/_event.ResApplicationEntities.msl;provider=MySql.Data.MySqlClient;provider connection string=&quot;server=rescfamysql.cuwhyqxxofly.us-east-1.rds.amazonaws.com;User Id=resSqlAdmin;password=drake7;Persist Security Info=True;database=resApplication&quot;" providerName="System.Data.EntityClient" />
    <add name="ResApplicationEntities-Staging" connectionString="metadata=res://*/_event.ResApplicationEntities.csdl|res://*/_event.ResApplicationEntities.ssdl|res://*/_event.ResApplicationEntities.msl;provider=MySql.Data.MySqlClient;provider connection string=&quot;server=rescfamysql-staging.cuwhyqxxofly.us-east-1.rds.amazonaws.com;User Id=resSqlAdmin;password=drake7;Persist Security Info=True;database=resApplication&quot;" providerName="System.Data.EntityClient" />
    <add name="UserMySqlEntityAccess" connectionString="metadata=res://*/user.User.csdl|res://*/user.User.ssdl|res://*/user.User.msl;provider=MySql.Data.MySqlClient;provider connection string=&quot;server=rescfamysql.cuwhyqxxofly.us-east-1.rds.amazonaws.com;User Id=resSqlAdmin;password=drake7;Persist Security Info=True;database=resApplication&quot;" providerName="System.Data.EntityClient" />
    <add name="ContentModelEntities" connectionString="metadata=res://*/common.Content.csdl|res://*/common.Content.ssdl|res://*/common.Content.msl;provider=MySql.Data.MySqlClient;provider connection string=&quot;server=rescfamysql.cuwhyqxxofly.us-east-1.rds.amazonaws.com;User Id=resSqlAdmin;password=drake7;Persist Security Info=True;database=resApplication&quot;" providerName="System.Data.EntityClient" />
    <add name="cfa-res" connectionString="Data Source=id.chick-fil-a.com;Initial Catalog=resApplication;User ID=idSqlAdmin; Password=drake7;" />
    <add name="cfa-res-mysql" connectionString="server=rescfamysql.cuwhyqxxofly.us-east-1.rds.amazonaws.com;uid=resSqlAdmin;pwd=drake7;database=resApplication;" />
    <add name="cfa-res-mysql-entity-fork" connectionString="server=rescfa-mysql-entity.cuwhyqxxofly.us-east-1.rds.amazonaws.com;uid=resSqlAdmin;pwd=drake7;database=resApplication;" />
    <add name="cfa-res-mysql-staging" connectionString="server=rescfamysql-staging.cuwhyqxxofly.us-east-1.rds.amazonaws.com;uid=resSqlAdmin;pwd=drake7;database=resApplication;" />
    <add name="cfa-app-fabric" connectionString="telnet://localhost:22233/cfaRes" />
    <add name="cfa-elasticache" connectionString="tcp://cfares.hjywkp.0001.use1.cache.amazonaws.com:11211" />
    <add name="cfa-queue" connectionString="" />
  </connectionStrings>
  <appSettings>
    <add key="webpages:Version" value="1.0.0.0" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="res-template-dir" value="~/Data/Xml/ResTemplate" />
    <add key="res-type-dir" value="~/Data/Xml/ResEventType" />
    <add key="res-theme-dir" value="~/Data/Xml/ResEventTheme" />
    <add key="gen-script-dir" value="~/Script/gen" />
    <add key="subdomain-mode" value="theme" />
    <add key="site-mode" value="res" />
    <!--tours or res? find out here-->
    <!--because domains change between applications (possibly radically) and may change between solution configurations
    this seems to be the appropriate approach-->
    <add key="subdomain-regex" value="([A-Za-z0-9]+\.)?([A-Za-z0-9]+)\.tours" />
    <add key="default-subdomain" value="tours" />
    <add key="default-area" value="tours" />
    <add key="default-action" value="Index" />
    <add key="default-controller" value="Home" />
    <add key="default-from-email" value="no-reply@chick-fil-a.com" />
    <add key="admin-email" value="hobst@thefoundryagency.com" />
    <add key="loginUrl" value="~/Account/LogOn" />
    <add key="autoFormsAuthentication" value="false" />
    <add key="cache-mode" value="off" />
  </appSettings>
  <system.net>
    <mailSettings>
      <smtp from="no-reply@chick-fil-a.com" deliveryMethod="Network">
        <network host="email-smtp.us-east-1.amazonaws.com" port="587" userName="AKIAJ3QUIF4FBYJW5OSA" password="AgQmwu0eVD8XcLE1tFu5YIPiThHonITGMYrcxiiZhjIK" defaultCredentials="true" />
      </smtp>
    </mailSettings>
    <defaultProxy enabled="true" />
    <settings>
      <!-- This setting causes .NET to check certificate revocation lists (CRL) 
           before trusting HTTPS certificates.  But this setting tends to not 
           be allowed in shared hosting environments. -->
      <!--<servicePointManager checkCertificateRevocationList="true"/>-->
    </settings>
  </system.net>
  <!--
    For a description of web.config changes for .NET 4.5 see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.5" />
      </system.Web>
  -->
  <system.web>
    <customErrors mode="Off" />
    <httpModules>
      <add name="DomainServiceModule" type="System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule, System.ServiceModel.DomainServices.Hosting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    </httpModules>
    <httpHandlers>
      <add verb="*" path=".mvc" validate="false" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </httpHandlers>
    <compilation debug="true" targetFramework="4.5">
      <assemblies>
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Helpers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.WebPages, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
    <machineKey validationKey="4B4DB6FB517402ACA6FB162043A8A2DBFF580E188F162E7D87125EF8771B48B557FFBA132D80F5E643940EB7C07377641E63883E751061C588D2CD55F1139D5A" decryptionKey="4023E310FD2373F2FD30A6EC408DE40DB458FC0FB0E4E76A0C98FCA07CD4BBDE" validation="SHA1" decryption="AES" />
    <membership defaultProvider="CfaApplicationMySqlMembershipProvider">
      <providers>
        <clear />
        <add name="CfaApplicationMySqlMembershipProvider" type="MySql.Web.Security.MySQLMembershipProvider, MySql.Web, Version=6.5.4.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" connectionStringName="cfa-res-mysql" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="true" passwordFormat="Encrypted" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" applicationName="/" autogenerateschema="true" />
      </providers>
    </membership>
    <profile enabled="true" defaultProvider="MySqlProfileProvider">
      <providers>
        <clear />
        <add name="MySqlProfileProvider" type="MySql.Web.Security.MySqlProfileProvider, MySql.Web, Version=6.5.4.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" connectionStringName="cfa-res-mysql" applicationName="/" autogenerateschema="true" />
      </providers>
    </profile>
    <roleManager enabled="true" defaultProvider="MySqlRoleProvider">
      <providers>
        <clear />
        <add name="MySqlRoleProvider" type="MySql.Web.Security.MySQLRoleProvider, MySql.Web, Version=6.5.4.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" connectionStringName="cfa-res-mysql" applicationName="/" autogenerateschema="true" />
      </providers>
    </roleManager>
    <pages controlRenderingCompatibilityVersion="4.0">
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
    <identity impersonate="false" />
    <authentication mode="Forms">
      <forms loginUrl="~/Account/LogOn?message=You+must+log+in+to+access+that+page." timeout="2880" />
    </authentication>
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true">
      <add name="DomainServiceModule" preCondition="managedHandler" type="System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule, System.ServiceModel.DomainServices.Hosting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <remove name="WebDAVModule" />
    </modules>
    <handlers>
      <remove name="WebDAV" />
      <remove name="ExtensionlessUrl-Integrated-4.0" />
      <add name="ExtensionlessUrl-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,DELETE,PUT,UPDATE,MERGE" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
    <httpErrors errorMode="Detailed" />
    <!--<staticContent>
            <mimeMap fileExtension=".woff" mimeType="application/octet-stream" />
        </staticContent>-->
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="log4net" publicKeyToken="1b44e1d426115821" culture="neutral" />
        <bindingRedirect oldVersion="1.0.0.0-1.2.10.0" newVersion="1.2.11.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.OData" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.4.0.0" newVersion="5.4.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.Edm" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.4.0.0" newVersion="5.4.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Spatial" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.4.0.0" newVersion="5.4.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="EntityFramework" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.4.0.0" newVersion="4.4.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
    <legacyHMACWarning enabled="0" />
    <!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
         to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
     -->
  </runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="Data Source=.\SQLEXPRESS; Integrated Security=True; MultipleActiveResultSets=True" />
      </parameters>
    </defaultConnectionFactory>
  </entityFramework>
  <system.serviceModel>
    <extensions>
      <behaviorExtensions>
        <add name="HttpOverrideBehaviorExtension" type="HttpMethodOverrideOperationSelection.HttpOverrideBehaviorExtension, cfacore.shared.modules, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
      </behaviorExtensions>
    </extensions>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="false" multipleSiteBindingsEnabled="true" />
    <bindings>
      <webHttpBinding>
        <binding name="webHttpBindingWithJsonP" crossDomainScriptAccessEnabled="true" />
      </webHttpBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name="AjaxEndpoint">
          <webHttp />
          <HttpOverrideBehaviorExtension />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <services>
      <service name="cfares.Service.Location">
        <endpoint behaviorConfiguration="AjaxEndpoint" address="" binding="webHttpBinding" bindingConfiguration="webHttpBindingWithJsonP" contract="cfares.Service.ILocation" />
      </service>
      <service name="cfares.Service.Occurrence">
        <endpoint behaviorConfiguration="AjaxEndpoint" address="" binding="webHttpBinding" bindingConfiguration="webHttpBindingWithJsonP" contract="cfares.Service.IOccurrence" />
      </service>
      <service name="cfares.Service.ResEvent">
        <endpoint behaviorConfiguration="AjaxEndpoint" address="" binding="webHttpBinding" bindingConfiguration="webHttpBindingWithJsonP" contract="cfares.Service.IResEvent" />
      </service>
      <service name="cfares.Service.Slot">
        <endpoint behaviorConfiguration="AjaxEndpoint" address="" binding="webHttpBinding" bindingConfiguration="webHttpBindingWithJsonP" contract="cfares.Service.ISlot" />
      </service>
      <service name="cfares.Service.Ticket">
        <endpoint behaviorConfiguration="AjaxEndpoint" address="" binding="webHttpBinding" bindingConfiguration="webHttpBindingWithJsonP" contract="cfares.Service.ITicket" />
      </service>
      <service name="cfares.Service.User">
        <endpoint behaviorConfiguration="AjaxEndpoint" address="" binding="webHttpBinding" bindingConfiguration="webHttpBindingWithJsonP" contract="cfares.Service.IUser" />
      </service>
    </services>
  </system.serviceModel>
  <system.web.extensions>
    <scripting>
      <webServices>
        <!--<authenticationService enabled="true" requireSSL="false" />-->
      </webServices>
    </scripting>
  </system.web.extensions>
  <dotNetOpenAuth>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
          <!--<add name="localhost" />-->
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    <!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
    <reporting enabled="true" />
    <!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. -->
    <!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ -->
    <openid />
  </dotNetOpenAuth>
  <uri>
    <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
         which is necessary for OpenID urls with unicode characters in the domain/host name.
         It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
    <idn enabled="All" />
    <iriParsing enabled="true" />
  </uri>
</configuration>