@model cfacore.shared.domain.media.Media
@{string pk = Model.IsBound() ? Model.Id().ToString() : "new";}
@{bool isNew = pk == "new";}

 @using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset data-pk='@pk' class='media-@pk'>
        
        <div class='legend inline-block'>Reservation Media</div>

        <div class='model-field field-Uri'>
            <div class="editor-label inline-block">
                @Html.LabelFor(model => model.MediaUri)
            </div>
            <div class="editor-field inline-block">
                @Html.EditorFor(model => model.MediaUri)
                @Html.ValidationMessageFor(model => model.MediaUri)
            </div>
        </div>

        <div class='model-field field-Name'>
            <div class="editor-label inline-block">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field inline-block">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class='model-field field-Description'>
            <div class="editor-label inline-block">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field inline-block">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class='model-field field-CreationDate'>
            <div class="editor-label inline-block">
                @Html.LabelFor(model => model.CreationDate)
            </div>
            <div class="editor-field inline-block">
                @Html.EditorFor(model => model.CreationDate)
                @Html.ValidationMessageFor(model => model.CreationDate)
            </div>
        </div>

        <div class='model-field field-FileSize'>
            <div class="editor-label inline-block">
                @Html.LabelFor(model => model.FileSize)
            </div>
            <div class="editor-field inline-block">
                @Html.EditorFor(model => model.FileSize)
                @Html.ValidationMessageFor(model => model.FileSize)
            </div>
        </div>

        <div class='model-field field-Height'>
            <div class="editor-label inline-block">
                @Html.LabelFor(model => model.Height)
            </div>
            <div class="editor-field inline-block">
                @Html.EditorFor(model => model.Height)
                @Html.ValidationMessageFor(model => model.Height)
            </div>
        </div>

        <div class='model-field field-Width'>
            <div class="editor-label inline-block">
                @Html.LabelFor(model => model.Width)
            </div>
            <div class="editor-field inline-block">
                @Html.EditorFor(model => model.Width)
                @Html.ValidationMessageFor(model => model.Width)
            </div>
        </div>

        <div class='model-field field-Length'>
            <div class="editor-label inline-block">
                @Html.LabelFor(model => model.Length)
            </div>
            <div class="editor-field inline-block">
                @Html.EditorFor(model => model.Length)
                @Html.ValidationMessageFor(model => model.Length)
            </div>
        </div>

        <div class='model-field field-Owner'>
            <div class="editor-label inline-block">
                @Html.LabelFor(model => model.Owner)
            </div>
            <div class="editor-field inline-block">
                @Html.EditorFor(model => model.Owner)
                @Html.ValidationMessageFor(model => model.Owner)
            </div>
        </div>

        <div class='model-field field-IsSystem'>
            <div class="editor-label inline-block">
                @Html.LabelFor(model => model.IsSystem)
            </div>
            <div class="editor-field inline-block">
                @Html.EditorFor(model => model.IsSystem)
                @Html.ValidationMessageFor(model => model.IsSystem)
            </div>
        </div>

        
    </fieldset>
     <div class='submit-block admin-green'>
            <div class='editor-label inline-block inline-block'>
            
            </div>
            <div class='editor-field inline-block inline-block'>
                <input type="submit" data-icon="ui-icon-disk" class='jq-button' value="Save" />
            </div>
            
        </div>
 }