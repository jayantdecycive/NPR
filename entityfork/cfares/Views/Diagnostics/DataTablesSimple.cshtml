@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>DataTablesSimple</title>    
    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/themes/base/jquery.ui.all.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/themes/admin-table/jquery-ui-1.8.18.custom.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/themes/admin-grey/jquery-ui-1.8.18.custom.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/datajs-1.0.2.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-1.5.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery/plugins.js")" type="text/javascript"></script>   
    <script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.dataTables.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery/jquery.jeditable.js")" type="text/javascript"></script>  
    <script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/datatables/KeyTable.js")" type="text/javascript"></script>    
    <script src="@Url.Content("~/Scripts/datatables/jquery.dataTables.editable.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/datatables/plugins.js")" type="text/javascript"></script>    
    <script src="@Url.Content("~/Scripts/datatables/CfaAdmin.js")" type="text/javascript"></script>    
     <script src="@Url.Content("~/Scripts/init.js")" type="text/javascript"></script>    
    <script src="@Url.Content("~/Scripts/api/api-base.js")" type="text/javascript"></script>
    
    <script type="text/javascript">
        $(document).ready(function () {
            /*
            Data Sources and processing are complicated and should possibly excluded from the model. How about creating this data handlers independently and pointing to them?

            Use Intended DataTables model but make one major change - use column names instead of indexes

            Model is as follows:
            Table Model - This model needs to have basic information regarding count and datasouce. We are using single datasources or permutations, not considering multiple sources.
            Column Model - This model applies to the array of columns in the Table Model Object
                    
            Style variables will be ignored               

            Tables Have:
            A DataSource or Data
            ?A CRUD Service
            


            Column Data May Be More Complex - We need a solution that will let you store an object and manage it using in different data contexts

            Columns Have:
            ColumnName (sName)
            ColumnId - Defaults from ColumnName
            ColumnLabel (sTitle)
            Is Globally Searchable - (bSearchable)
            Applied Filters - THIS DOES NOT EXIST. It can be built into a global search object
            Processing - (mDataProp)
            fnOnSet - for reading from database (opportunity for complex data management)
            fnOnDisplay - for displaying
            fnOnFilter - for searching
            fnOnSubmit - for editing (opportunity for complex data management)

            Tables Can:
            Perform a Global Search to allowed columns
            Read and Commit to a datasource


            */
            //this object is constructed per table and can (should) be derived from the dom
            var sampleData =
            {
                mData: "myservice or array",
                sCrud: "myservice - not editable if empty",
                bOData: true,   // applies to both editing and retrival
                aColumns: {     // any column not in this array follows default behavior
                    myColumnId: {
                        bVisible: true,
                        bSearchable: true,
                        bSortable: true,
                        bIdColumn: false,
                        bEditable:false,
                        fnODataColumnFilter: function (column) {//need ideas here, all I can think to do is return an odata search filter
                            //important to note that this is by reference - conditional filters can be managed this way
                            return "{0} ne '{1}'".format(column, "Mall");
                        },
                        mData: {    //row is an object with each element dictionaried BY ID
                            fnOnSet: function (sourceObject, val, column) {//return object to set
                                return val;
                            },
                            fnOnSort: function (sourceObject, val, column) {//return object to sort
                                return val;
                            },
                            fnOnType: function (sourceObject, val, column) {//return object to show type
                                return val;
                            },
                            fnOnDisplay: function (sourceObject, val, column) {//return string to display
                                return val;
                            },
                            fnOnFilter: function (sourceObject, val, column) {//return value to sort
                                return val;
                            }
                        },
                        mEdit: {
                            fnOnEdit: function (sourceObject, val, row, column) {//return html or jquery for edit

                            },
                            fnOnSubmit: function (sourceObject, val, row, column) {//return object to server 

                            },
                            mMode: "text"//or date, etc. or function
                        }
                    },
                    myOtherColumnId: {
                        mData: "",
                        mEdit: "date"
                    }
                }
            };


            //$("#table2").dataTable(params2).fnSetFilteringDelay().fnSetJqUiHover();
            //console.log(DomToTableArgs($("#table1")));
        });




        var DataFunction = {
            mallfilter: function (col) {
                return "{0} ne '{1}'".format(col, "MALL");
            },
            onset: function () { },
            onedit: function () { },
            onsort: function () { },
            ondisplay: function (src, val) { return val; },
            onsubmit: function () { },
            onlinkdisplay: function (sourceObject, val, column) {

                return "<a href='http://www.chick-fil-a.com/{0}' target='_blank'>{1}</a>".format(val, "View");
            }
        };
    </script>
</head>
<body>
    <div>
        <!--<table id="table1" class='data-table new' data-odata="true" data-data='http://localhost:65271/DataService/Location.svc/Locations' data-crud='http://localhost:65271/DataService/Location.svc/Locations({0}L)'>
         <thead>
            <tr>
                <th data-id='MarketableLink' data-column-parent='MarketableName' data-on-display='DataFunction.onlinkdisplay' width="20%">Link</th>
                <th data-id='Name' data-visible='true' data-searchable='true' data-sortable='true' data-filter='DataFunction.mallfilter' 
                data-on-set='DataFunction.onset' data-on-display='DataFunction.ondisplay' data-on-sort='DataFunction.onsort' data-on-filter='DataFunction.onfilter'
                data-on-edit='DataFunction.onedit' data-on-submit='DataFunction.onsubmit' data-edit-mode='DataFunction.editmode'
                width="20%">Location Name</th>			    
			    <th data-column-name='LocationNumber' data-id-column='true' width="20%">Location Number</th>
			    <th data-column-name='LocationCode' data-filter='DataFunction.mallfilter' width="20%">Location Code</th>
                <th data-column-name='MarketableName' width="20%">Marketable Name</th>                
		    </tr>
         </thead>
     </table>-->
     <table id="table1" class='data-table' data-data='http://localhost:65271/DataService/Location.svc/Locations' 
        data-crud='http://localhost:65271/DataService/Location.svc/Locations({0}L)'>
         <thead>
            <tr>
                <th data-id='MarketableLink' data-column-parent='MarketableName' data-on-display='DataFunction.onlinkdisplay' width="10%">Link</th>
                <th data-id='Name' width="30%">Location Name</th>			    
			    <th data-column-name='LocationNumber' data-id-column='true' width="20%">Location Number</th>
			    <th data-column-name='LocationCode' data-editable='false' data-filter='DataFunction.mallfilter' width="20%">Location Code</th>
                <th data-column-name='MarketableName' width="20%">Marketable Name</th>                
		    </tr>
         </thead>
     </table>
    </div>
</body>
</html>
