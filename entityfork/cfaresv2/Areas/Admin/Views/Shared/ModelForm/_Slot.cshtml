@using cfares.site.modules.com.application
@model cfares.domain._event.Slot
@{int pk = Model.SlotId;}
@{bool isNew = pk == 0;}

    <fieldset data-pk='@pk' class='slot-@pk'>
        
        @Html.HiddenFor(model => model.SlotId)

        <div class='legend inline-block'></div>

        <div class='model-field field-Start'>
            <div class="editor-label inline-block">
                @Html.LabelFor(model => model.StartOffsetString)
            </div>
            <div class="editor-field inline-block">
                @Html.EditorFor(model => model.StartOffsetString)
                @Html.ValidationMessageFor(model => model.StartOffsetString)
            </div>
        </div>

        <div class='model-field field-End'>
            <div class="editor-label inline-block">
                @Html.LabelFor(model => model.EndOffsetString)
            </div>
            <div class="editor-field inline-block">
                @Html.EditorFor(model => model.EndOffsetString)
                @Html.ValidationMessageFor(model => model.EndOffsetString)
            </div>
        </div>

        <div class='model-field field-Cutoff'>
            <div class="editor-label inline-block">
                @Html.LabelFor(model => model.CutoffString)
            </div>
            <div class="editor-field inline-block">
                @Html.EditorFor(model => model.CutoffString)
                @Html.ValidationMessageFor(model => model.CutoffString)
            </div>
        </div>

        <div class='model-field field-Capacity'>
            <div class="editor-label inline-block">
                @Html.LabelFor(model => model.Capacity)
            </div>
            <div class="editor-field inline-block">
                @Html.EditorFor(model => model.Capacity)
                @Html.ValidationMessageFor(model => model.Capacity)
            </div>
        </div>

        <div class='model-field field-Occurrence'>
            <div class="editor-label inline-block">
                Event Occurrence
            </div>
            <div class="editor-field inline-block">
                @Html.EditorFor(model => model.OccurrenceId)
                @Html.ValidationMessageFor(model => model.OccurrenceId)
            </div>
        </div>
		
		@if( AppContext.Current.Configuration.ApplicationId == Application.CFA ) {

			<div class='model-field field-Schedule'>
				<div class="editor-label inline-block">
					@Html.LabelFor(model => model.ScheduleId)
				</div>
				<div class="editor-field inline-block">
					@Html.EditorFor(model => model.ScheduleId)
					@Html.ValidationMessageFor(model => model.ScheduleId)
				</div>
			</div>

			<div class='model-field field-IsScheduled'>
				<div class="editor-label inline-block">
					@Html.LabelFor(model => model.IsScheduled)
				</div>
				<div class="editor-field inline-block">
					@Html.EditorFor(model => model.IsScheduled)
					@Html.ValidationMessageFor(model => model.IsScheduled)
				</div>
			</div>
	  
		}
        
       @if (!isNew)
       {

        @*<div class='model-field field-Tickets'>
            <div class="editor-label inline-block">
                @Html.LabelFor(model => model.Tickets)
            </div>
            <div class="editor-field inline-block admin-table">
                @Html.ActionLink("Ticket Summary", "Tickets", new { id = Model.OccurrenceId }, new { @class = "jq-button", data_icon = "ui-icon-circle-arrow-e" })
            </div>
        </div>*@
       }
        <div class='model-field field-Status'>
            <div class="editor-label inline-block">
                @Html.LabelFor(model => model.Status)
            </div>
            <div class="editor-field inline-block">
                @Html.EditorFor(model => model.Status)
                @Html.ValidationMessageFor(model => model.Status)
            </div>
        </div>
        
    </fieldset>
