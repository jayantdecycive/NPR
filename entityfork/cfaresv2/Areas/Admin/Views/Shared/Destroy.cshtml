@using System.Text.RegularExpressions
@using cfacore.domain._base
@model System.Collections.IList

@{
    Type pocoType = Model.GetType().GetGenericArguments()[0];
    string ModelId = pocoType.Name;
    string ModelName = Regex.Replace(ModelId, "([a-z](?=[A-Z])|[A-Z](?=[A-Z][a-z]))", "$1 ");
    //string[] parentModels = Model.GetType().
    List<string> parentModels = new List<string>(){pocoType.Name};
    Type currentType = pocoType.BaseType;
    while (currentType != typeof(cfacore.domain._base.DomainObject) && currentType != null)
    {
        parentModels.Add(currentType.Name);
        currentType = currentType.BaseType;
    }
    
    ViewBag.Title = "Destroy";
    
    Layout = "~/Areas/Admin/Views/Shared/Layout/_Destroy.cshtml";
    
    ViewBag.Brief = "Delete "+ModelName;
}

<h1>@ModelName</h1>
<p>
</p>
        

@section Details
{
    <table>
		@foreach (var model in Model) {
		<tr>
			<td class="padding-left-10 padding-bot-20">
				@Html.Raw(((DomainObject)model).ToHtmlString())
			</td>
		</tr> }
    </table>
}